# math_filters.py
# Этот файл определяет пользовательские фильтры для шаблонов Django.
# Фильтры позволяют выполнять математические операции (вычитание и умножение) в шаблонах.

# Импортируем модуль template из Django, который нужен для работы с шаблонами.
from django import template

# Создаём объект библиотеки шаблонов, который будет регистрировать наши фильтры.
register = template.Library()

# Регистрируем фильтр subtract с помощью декоратора @register.filter.
# Этот фильтр позволяет вычитать одно число из другого в шаблонах.
@register.filter
def subtract(value, arg):
    """
    Вычитает значение arg из value и возвращает результат.

    Args:
        value: Первое число (уменьшаемое).
        arg: Второе число (вычитаемое).

    Returns:
        Разница между value и arg.

    Example:
        В шаблоне: {{ 10|subtract:3 }} → вернёт 7
    """
    return value - arg

# Регистрируем фильтр multiply с помощью декоратора @register.filter.
# Этот фильтр позволяет умножить одно число на другое в шаблонах.
@register.filter
def multiply(value, arg):
    """
    Умножает value на arg и возвращает результат.

    Args:
        value: Первое число (множимое).
        arg: Второе число (множитель).

    Returns:
        Произведение value и arg. Если преобразование в числа не удалось, возвращает 0.

    Example:
        В шаблоне: {{ 5|multiply:2 }} → вернёт 10.0
    """
    # Преобразуем входные данные в float, чтобы поддерживать дробные числа.
    try:
        value = float(value)  # Пробуем преобразовать первое значение в float.
        arg = float(arg)  # Пробуем преобразовать второе значение в float.
        return value * arg  # Возвращаем произведение.
    except (ValueError, TypeError):  # Обрабатываем ошибки преобразования (например, если передали строку).
        return 0  # Если не удалось преобразовать, возвращаем 0, чтобы шаблон не сломался.